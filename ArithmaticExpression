#include <iostream>
#include <cmath>
using namespace std;

struct value {
    int val;
    struct value * prevval;
};


struct oper{
    char a;
    struct oper * prevop;
};
int formnum(int qw[],int len){
    int i,num=0;
    for(i=0;i<len;i++){
        num+=qw[i]*pow(10,len-1-i);
        qw[i]=0;
        }
    return num;
}

struct value * pushv(int va,struct value* v){
    
    struct value* node;
    node=new struct value [1];
    
    node->val=va;
    node->prevval=v;
    return node;
    
}

struct oper * pusho(char c,struct oper * op){
    
    struct oper* node;
    node=new struct oper [1];
    
    node->a=c;
    node->prevop=op;
    return node;
    
}

struct oper* popo(struct oper* topo){
    struct oper* newtop;
    newtop=topo->prevop;
    
    return newtop;
    
}

struct value* popv(struct value* topv){
    struct value* newtop;
    newtop=topv->prevval;

    return newtop;
    
}

int innerprior(char z){
    if(z=='+' || z=='-') return 1;
    else if(z=='*' || z=='/') return 2;
    else if(z=='^') return 3;
    else if(z=='(') return 0;
    
}
int outerprior(char z){
    if(z=='+' || z=='-') return 1;
    else if(z=='*' || z=='/') return 2;
    else if(z=='^') return 4;
    else if(z=='(') return 5;
    else if(z=='#') return -1;
    
}



int main() {
	// your code goes here
	char a;

	struct value * topv;
	struct oper * topo;
	topv=NULL;
	topo=NULL;
	int ar[10],count=0;
	cin>>a;
	while (!(a=='#' && topo==NULL)){
	    count=0;
	   if(a<='9' && a>='0'){
	       int i;
	    for(i=0;(a<='9' && a>='0');i++){
	        ar[i]=a-'0';
	        cin>>a;count++;
	    }
	
	   topv= pushv(formnum(ar,count),topv);
	  
	    }
	  
	    
	    if(topo==NULL) topo=pusho(a,topo);
	    
	    else {
	        if(a==')'){
	            while(topo->a!='('){
	                if(topo->a =='+'){
	                    int newnum=(topv->val)+(topv->prevval->val);
	                    topv=popv(topv);
	                    topv=popv(topv);
	                    topv=pushv(newnum,topv);
	                    topo=popo(topo);
	                }
	                else  if(topo->a =='-'){
	                    int newnum=(topv->prevval->val)-(topv->val);
	                    topv=popv(topv);
	                    topv=popv(topv);
	                    topv=pushv(newnum,topv);
	                    topo=popo(topo);
	                } 
	                else if(topo->a =='*'){
	                    int newnum=(topv->prevval->val)*(topv->val);
	                    topv=popv(topv);
	                    topv=popv(topv);
	                    topv=pushv(newnum,topv);
	                    topo=popo(topo);
	                } 
	                else if(topo->a =='/'){
	                    int newnum=(topv->prevval->val)/(topv->val);
	                    topv=popv(topv);
	                    topv=popv(topv);
	                    topv=pushv(newnum,topv);
	                    topo=popo(topo);
	                } 
	                else if(topo->a =='^'){
	                    int newnum=(int)pow((topv->prevval->val),(topv->val));
	                    topv=popv(topv);
	                    topv=popv(topv);
	                    topv=pushv(newnum,topv);
	                    topo=popo(topo);
	                } 
	            }topo=popo(topo);
	            
	        }
	             else if(topo!=NULL)
	           {
	            if(outerprior(a)>innerprior(topo->a)) topo=pusho(a,topo);
	            
	            else{
	                while(topo!=NULL &&(outerprior(a)<=innerprior(topo->a)) ){
	                     if(topo->a =='+'){
	                    int newnum=(topv->val)+(topv->prevval->val);
	                    topv=popv(topv);
	                    topv=popv(topv);
	                    topv=pushv(newnum,topv);
	                    topo=popo(topo);
	                }
	                else  if(topo->a =='-'){
	                    int newnum=(topv->prevval->val)-(topv->val);
	                    topv=popv(topv);
	                    topv=popv(topv);
	                    topv=pushv(newnum,topv);
	                    topo=popo(topo);
	                } 
	                else if(topo->a =='*'){
	                    int newnum=(topv->prevval->val)*(topv->val);
	                    topv=popv(topv);
	                    topv=popv(topv);
	                    topv=pushv(newnum,topv);
	                    topo=popo(topo);
	                } 
	                else if(topo->a =='/'){
	                    int newnum=(topv->prevval->val)/(topv->val);
	                    topv=popv(topv);
	                    topv=popv(topv);
	                    topv=pushv(newnum,topv);
	                    topo=popo(topo);
	                } 
	                else if(topo->a =='^'){
	                    int newnum=(int)pow((topv->prevval->val),(topv->val));
	                    topv=popv(topv);
	                    topv=popv(topv);
	                    topv=pushv(newnum,topv);
	                    topo=popo(topo);
	                } 
	               
	                    
	                }if(a!=')' && a!='#')topo=pusho(a,topo);
	                
	            }
	            
	            
	        }
	        
	    }
	   
	   if(a!='#') cin>>a;    
	  }
	        
	 cout<<topv->val;
	
	
	return 0;
}

